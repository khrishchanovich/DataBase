Описание фунциональных требований к проекту

---

Функциональность

Всех пользователей можно разделить на две основные категории:

1. Гости
2. Зарегистрированные пользователи

Для гостей доступен просмотр такой информации, как:

1. Типы страхования
2. Адреса филиалов компании
3. Агенты каждого филиала

Гость может зарегистрироваться или войти в систему, если у него уже есть учетная запись. 

Зарегистрированный пользователь может являться администратором, сотрудником (страховым агентом), страхователем (клиентом).

Администратор может:

1. Управление сотрудниками (добавление новых страховых агентов, удаление сотрудников, распределение страхователей по страховым агентам взависимости от нужд страхователя)
2. Управление доходами страховых агентов
3. Просмотр всех существующих договоров
4. Добавление, изменение и удаление статей о типах страхования

Страховой агент может:

1. Принятие заявки на страхование из журнала с заявками пользователей взависимости от нужд клиента
2. Составление договора с клиентом
3. Просмотр своих существующих договоров

Клиент может:

1. Оставить заявку на страхование в журнале
2. Просмотр своих существующих договоров
3. Просмотр информации о возможностях страховой компании
4. Оставить отзыв

---

Описание сущностей

---

1. User

Описывает общую сущность пользователя

username VARCHAR (100) NOT NULL - логин пользователя
email VARCHAR (100) NOT NULL - почтовый ящик пользователя
password VARCHAR (100) NOT NULL - пароль пользователя (хранить по другому надо (хеш.))
name VARCHAR (100) NOT NULL - имя пользователя
surname VARCHAR (100) NOT NULL - фамилия пользователя

2. Feedback

Описывает отзыв, который может оставить пользователь:

rating INTEGER NOT NULL - оценка пользователем выполненных услуг от 0 до 5
feedback TEXT NOT NULL - словесная оценка пользователем выполненных услуг
client_id INTEGER NOT NULL FK - автор отзыва (User)

3. Contract

Описывает контракт, который заключает агент страхования с клиентом:

initial_payment DECIMAL NOT NULL - первоначальный взнос
time_create DATETIME - время создания договора
journal_id INTEGER NOT NULL FK


4. InsuranceType

Описывает типы страхования, которые можно использовать при заключении договора

title VARCHAR (100) NOT NULL - наименование типа страхования
description TEXT NOT NULL - краткое описание типа страхования
content TEXT NOT NULL - полное описание типа страхования
rate DECIMAL NOT NULL - тариф
time_create DATETIME NOT NULL - время создания
is_published BOOL NOT NULL - отображаемо/неотображаемо
category_id INTEGER NOT NULL - связь с категорие (Category), к которой должен относиться тип страхования
ins_obj_id INTEGER NOT NULL - связь с объектом страхования (Object), который может относиться к данному типу страхования

5. InsuranceTypeObject

ins_type_id INTEGER NOT NULL FK
ins_obj_id INTEGER NOT NULL FK

6. Category

Описывает категории, к которым могут быть привязаны определенные типы страхования

name VARCHAR (100) NOT NULL - наименование
description TEXT NOT NULL - описание категории

7. InsuranceObject

Описывает объекты страхования, которые может выбрать пользователь при заключении договора

name VARCHAR (100) NOT NULL - наименование
description TEXT NOT NULL - описание возможного объекта страхования

8. Coupons

Описывает возможные купоны и акции, которые получает клиент после заключение договора

title VARCHAR (100) NOT NULL - наименование
description TEXT NOT NULL - описание
client_id INTEGER NOT NULL FK - связь с пользователями (User), у которых может быть в наличии данный промокод

9. InsuranceAgent

Описывает агента страхования, с которым клиент заключает договор

position_id INTEGER NOT NULL FK - связь с должность (Position), которую занимает агент
address_id INTEGER NOT NULL FK - связь с филиалом (InsuranceCompany), в котором работает агент
user_id INTEGER NOT NULL

10. Position

Описывает должности, которые либо уже заняты агентами, либо нет

title VARCHAR (100) NOT NULL - название должности
description TEXT NOT NULL - описание должности

11. InsuranceCompany

Описывает филиалы страховой компании

name VARCHAR (100) NOT NULL - наименование
address VARCHAR (100) NOT NULL - адресс филиала
phone_number VARCHAR (100) NOT NULL - номер телефона филиала

12. AdminUser

Описывает администратора компании

user_id INTEGER NOT NULL

13. Journal

Описывает журнал заявок

ins_agent_id INTEGER NOT NULL FK
client_id INTEGER NOT NULL FK
ins_type_id INTEGER NOT NULL FK
ins_object_id INTEGET NOT NULL FK

14. Client

user_id INTEGER NOT NULL FK

---

Основываясь на представлениях сущностей:

1. User

InsuranceAgent: - || -
AdminUser: Одна сущность связана с другой сущностью, но последняя связь не обязательна
Client: - || -

2. Feedback

Client: Клиент может иметь ноль и более отзывов, но это не обязательно

3. Contract

Journal: Контракт содержит одно упоминание в журнале
 
4. InsuranceType

Journal: Одна запись в журнале содержит одно упоминание о типе страхования
InsuranceObject: связь многие ко многим через третью таблицу
Category: категория может иметь в себе несколько типов страхования, но тип страхования может относиться только к одной категории

5. Category

InsuranceType: - || -

6. InsuranceObject

Journal: Одна запись в журнале может содержать лишь одно упоминание объекта страхования
InsuranceType: - || -

7. InsuranceAgent

User: - || -
Journal: Одна запись в журнале может содержать лишь одного агента, но агент может иметь много записей в журнале
Position: Агент обязан иметь одну позицию
InsuranceCompany: Агент обязан быть приписан к одному филиалу

8. Position

InsuranceAgent: - || -

9. InsuranceCompany

InsuranceAgent: - || -

10. AdminUser

User: - || -

11. Journal

InsuranceAgent: - || -
Client: - || -
InsuranceType: - || -
InsuranceObject: - || -

12. Client

Feedback: - || -
Journal: - || -
User: - || -

---
